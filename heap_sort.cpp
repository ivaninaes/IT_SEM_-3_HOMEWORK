#include <iostream>
// Уравнивает кучу от заданового элемента
void heapify(int *arr, int n, int i) {
    // Максимум (пока что корень)
    int m = i;
    // Левый ребенок
    int l = 2 * i + 1;
    // Правый ребенок
    int r = 2 * i + 2;
    // Левый больше корня?
    if (l < n && arr[l] > arr[m])
        m = l;
    // Правый больше левого и корня?
    if (r < n && arr[r] > arr[m])
        m = r;
    // У нас новый наибольший элемент?
    if (m != i) {
        // Тогда он новый корень
        std::swap(arr[m], arr[i]);
        // Теперь надо обновить кучу
        heapify(arr, n, m);
    }
}

/**
 Сортирует массив по заданному алгоритму 
 @param n -- размер массива
 @param array -- массив (сколько звездочек насыпать в тип решайте сами)
 */
void my_sort(int n, int *array) {
    for (int i = n - 1; i >= 0; i--)
        heapify(array, n, i); // нам нужно построить кучу, для этого 

    //Теперь будем рассматривать каждый элемент
    for (int i = n - 1; i > 0; i--) {
        // Изза того что у нас куча - мы знаем что нам встретился максимум, тогда кидаем его в конец
        std::swap(array[0], array[i]);
        // И перестраиваем кучу
        heapify(array, i, 0);
    }
}

int main() {
    int a[] = {2, 5, 2, 1, 4, 2, 7, 9, 6, 36, 0, -1}; // Массив для теста
    my_sort(12, a); // сортируем
    for (int i = 0; i < 12; i++) {
        std::cout << a[i] << ' '; // выводим
    }
}